<?xml version="1.0" encoding="utf-8"?>
<res class="ShaderProgram" class="ShaderProgram" path="Res://Material/PrototypeGlobal.shader" Type="glsl" VertexShader="#version 450&#10;&#10;struct Position&#10;{&#10;    vec3 local;&#10;    vec3 world;&#10;    vec3 view;&#10;};&#10;&#10;layout(binding = 0, std140) uniform UBO&#10;{&#10;    mat4 u_WorldMatrix;&#10;    mat4 u_ViewProjMatrix;&#10;} vs_ubo;&#10;&#10;layout(location = 0) in vec3 a_Position;&#10;layout(location = 0) out Position v_Position;&#10;layout(location = 4) out vec2 v_UV;&#10;layout(location = 4) in vec2 a_UV;&#10;&#10;void main()&#10;{&#10;    vec4 worldPosition = vs_ubo.u_WorldMatrix * vec4(a_Position, 1.0);&#10;    vec4 clipPosition = vs_ubo.u_ViewProjMatrix * worldPosition;&#10;    v_Position.local = a_Position;&#10;    v_Position.world = worldPosition.xyz;&#10;    v_Position.view = ((clipPosition.xyz / vec3(clipPosition.w)) + vec3(1.0)) * 0.5;&#10;    gl_Position = clipPosition;&#10;    v_UV = a_UV;&#10;}&#10;&#10;" FragmentShader="#version 450&#10;&#10;struct Position&#10;{&#10;    vec3 local;&#10;    vec3 world;&#10;    vec3 view;&#10;};&#10;&#10;layout(binding = 1) uniform sampler2D GridTexture;&#10;&#10;layout(location = 0) in Position v_Position;&#10;layout(location = 0) out vec4 o_FragColor;&#10;layout(location = 4) in vec2 v_UV;&#10;&#10;vec3 SRgbToLinear(vec3 srgbIn)&#10;{&#10;    return pow(srgbIn, vec3(2.2000000476837158203125));&#10;}&#10;&#10;vec3 LinearToSRgb(vec3 linearIn)&#10;{&#10;    return pow(linearIn, vec3(0.4545454680919647216796875));&#10;}&#10;&#10;void main()&#10;{&#10;    vec4 Color_48_Value = vec4(0.223309993743896484375, 0.250840008258819580078125, 0.2844519913196563720703125, 1.0);&#10;    vec4 Color_51_Value = vec4(1.0);&#10;    float Float_52_Value = 0.5;&#10;    vec4 Combine_45 = vec4(v_Position.world.x, v_Position.world.z, 0.0, 0.0);&#10;    vec4 GridTexture_Color = texture(GridTexture, Combine_45.xy);&#10;    vec3 param = GridTexture_Color.xyz;&#10;    vec3 _70 = SRgbToLinear(param);&#10;    GridTexture_Color = vec4(_70.x, _70.y, _70.z, GridTexture_Color.w);&#10;    vec3 Mix_50 = mix(Color_51_Value.xyz, GridTexture_Color.xyz, vec3(Float_52_Value));&#10;    vec3 Multiplication_49 = Mix_50 * Color_48_Value.xyz;&#10;    vec3 _BaseColor = Multiplication_49;&#10;    float _Opacity = 1.0;&#10;    float _Metalic = 0.20000000298023223876953125;&#10;    float _PerceptualRoughness = 0.5;&#10;    vec3 param_1 = _BaseColor;&#10;    o_FragColor = vec4(LinearToSRgb(param_1), _Opacity);&#10;}&#10;&#10;" Graph="{&#10;    &quot;connections&quot;: [&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;any&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;vec3&quot;,&#10;                    &quot;name&quot;: &quot;vec3&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{b5d6e3f4-00f4-4f15-b918-7577a68aa480}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{a67b579c-768f-4404-8944-a680d5dd5d72}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{3234070c-ed5a-4a27-b808-9aa24fd60f80}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{b5d6e3f4-00f4-4f15-b918-7577a68aa480}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{3234070c-ed5a-4a27-b808-9aa24fd60f80}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{b5d6e3f4-00f4-4f15-b918-7577a68aa480}&quot;,&#10;            &quot;out_index&quot;: 2&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{40effe65-9220-4773-bbd9-7854af4dbbdf}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{3234070c-ed5a-4a27-b808-9aa24fd60f80}&quot;,&#10;            &quot;out_index&quot;: 2&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;B&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;vec3&quot;,&#10;                    &quot;name&quot;: &quot;rgb&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{23b1a827-e08e-4ca2-afa2-82666a4e9a71}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{fbd25997-222e-4f70-92d0-0c00566f8538}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{ea345700-e66f-45c5-9bd0-f50d1511c9b9}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{23b1a827-e08e-4ca2-afa2-82666a4e9a71}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;A&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;vec3&quot;,&#10;                    &quot;name&quot;: &quot;rgb&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{3eadfa49-9a33-42b3-967f-01a42bfb9b0a}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{75ec5cf9-e436-4a8e-b34d-7bcbd817ce63}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;B&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;vec3&quot;,&#10;                    &quot;name&quot;: &quot;rgb&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{3eadfa49-9a33-42b3-967f-01a42bfb9b0a}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{40effe65-9220-4773-bbd9-7854af4dbbdf}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{3eadfa49-9a33-42b3-967f-01a42bfb9b0a}&quot;,&#10;            &quot;in_index&quot;: 2,&#10;            &quot;out_id&quot;: &quot;{fa1e291a-a2da-42ed-8287-84835424a4ef}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;A&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;vec3&quot;,&#10;                    &quot;name&quot;: &quot;vec3&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{23b1a827-e08e-4ca2-afa2-82666a4e9a71}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{3eadfa49-9a33-42b3-967f-01a42bfb9b0a}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        }&#10;    ],&#10;    &quot;nodes&quot;: [&#10;        {&#10;            &quot;id&quot;: &quot;{ea345700-e66f-45c5-9bd0-f50d1511c9b9}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;ShaderTemplate&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: 230,&#10;                &quot;y&quot;: 370&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{a67b579c-768f-4404-8944-a680d5dd5d72}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;VertexAttribute&quot;,&#10;                &quot;option&quot;: &quot;position(world)&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -1293,&#10;                &quot;y&quot;: 331&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{b5d6e3f4-00f4-4f15-b918-7577a68aa480}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Split&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -1006,&#10;                &quot;y&quot;: 331&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{3234070c-ed5a-4a27-b808-9aa24fd60f80}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Combine&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -807,&#10;                &quot;y&quot;: 352&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{40effe65-9220-4773-bbd9-7854af4dbbdf}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Export&quot;: &quot;true&quot;,&#10;                &quot;isAtla&quot;: &quot;false&quot;,&#10;                &quot;name&quot;: &quot;Texture&quot;,&#10;                &quot;texture&quot;: &quot;Res://Texture/PolygonPrototype_Texture_Grid_08.png&quot;,&#10;                &quot;type&quot;: &quot;General&quot;,&#10;                &quot;variableName&quot;: &quot;GridTexture&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -654,&#10;                &quot;y&quot;: 347&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{fbd25997-222e-4f70-92d0-0c00566f8538}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Export&quot;: &quot;false&quot;,&#10;                &quot;color&quot;: &quot;0.505882 0.533333 0.564706 1 &quot;,&#10;                &quot;name&quot;: &quot;Color&quot;,&#10;                &quot;variableName&quot;: &quot;Color_48&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -642,&#10;                &quot;y&quot;: 559&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{23b1a827-e08e-4ca2-afa2-82666a4e9a71}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Multiplication&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: 16,&#10;                &quot;y&quot;: 370&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{3eadfa49-9a33-42b3-967f-01a42bfb9b0a}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Mix&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -171,&#10;                &quot;y&quot;: 273&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{75ec5cf9-e436-4a8e-b34d-7bcbd817ce63}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Export&quot;: &quot;false&quot;,&#10;                &quot;color&quot;: &quot;1 1 1 1 &quot;,&#10;                &quot;name&quot;: &quot;Color&quot;,&#10;                &quot;variableName&quot;: &quot;Color_51&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -647,&#10;                &quot;y&quot;: 139&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{fa1e291a-a2da-42ed-8287-84835424a4ef}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Export&quot;: &quot;false&quot;,&#10;                &quot;name&quot;: &quot;Float&quot;,&#10;                &quot;number&quot;: &quot;0.5&quot;,&#10;                &quot;variableName&quot;: &quot;Float_52&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -376,&#10;                &quot;y&quot;: 411&#10;            }&#10;        }&#10;    ]&#10;}&#10;" CullMode="CULL_FRONT" BlendMode="Opaque" Uniforms.GridTexture="Res://Texture/PolygonPrototype_Texture_Grid_08.png" />
