<?xml version="1.0" encoding="utf-8"?>
<res class="ShaderProgram" class="ShaderProgram" path="Res://Material/ChessBoard/ChessBoard.shader" Type="glsl" VertexShader="#version 450&#10;&#10;layout(binding = 0, std140) uniform UBO&#10;{&#10;    mat4 u_WorldMatrix;&#10;    mat4 u_ViewProjMatrix;&#10;} vs_ubo;&#10;&#10;layout(location = 0) in vec3 a_Position;&#10;layout(location = 4) out vec2 v_UV;&#10;layout(location = 4) in vec2 a_UV;&#10;&#10;void main()&#10;{&#10;    vec4 position = vs_ubo.u_WorldMatrix * vec4(a_Position, 1.0);&#10;    position = vs_ubo.u_ViewProjMatrix * position;&#10;    gl_Position = position;&#10;    v_UV = a_UV;&#10;}&#10;&#10;" FragmentShader="#version 450&#10;&#10;layout(location = 4) in vec2 v_UV;&#10;layout(location = 0) out vec4 o_FragColor;&#10;&#10;vec3 LinearToSRgb(vec3 linearIn)&#10;{&#10;    return pow(linearIn, vec3(0.4545454680919647216796875));&#10;}&#10;&#10;void main()&#10;{&#10;    float Float_35_Value = 2.0;&#10;    float Float_37_Value = 10.0;&#10;    vec2 Multiplication_38 = v_UV * Float_37_Value;&#10;    vec2 Floor_28 = floor(Multiplication_38);&#10;    float Addition_34 = Floor_28.x + Floor_28.y;&#10;    float Mod_29 = mod(Addition_34, Float_35_Value);&#10;    vec4 Combine_36 = vec4(Mod_29, Mod_29, Mod_29, 0.0);&#10;    vec3 _BaseColor = Combine_36.xyz;&#10;    float _Opacity = 1.0;&#10;    float _Metalic = 0.20000000298023223876953125;&#10;    float _PerceptualRoughness = 0.5;&#10;    vec3 param = _BaseColor;&#10;    o_FragColor = vec4(LinearToSRgb(param), _Opacity);&#10;}&#10;&#10;" Graph="{&#10;    &quot;connections&quot;: [&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;B&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;float&quot;,&#10;                    &quot;name&quot;: &quot;float&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{5ccf17aa-05c4-403d-8b53-ffc4f3705011}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{9c1e697d-c800-4a35-9385-9e3ed06a2000}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;any&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;vec2&quot;,&#10;                    &quot;name&quot;: &quot;vec2&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{9e34dd95-8db8-4d99-88d2-75d5c6b0fd5b}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{a142a62a-f478-4897-86de-25bd0bacc68b}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;A&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;float&quot;,&#10;                    &quot;name&quot;: &quot;r&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{cbc3263d-0c3b-4371-a313-89a7511ed31f}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{9e34dd95-8db8-4d99-88d2-75d5c6b0fd5b}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;B&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;float&quot;,&#10;                    &quot;name&quot;: &quot;g&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{cbc3263d-0c3b-4371-a313-89a7511ed31f}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{9e34dd95-8db8-4d99-88d2-75d5c6b0fd5b}&quot;,&#10;            &quot;out_index&quot;: 1&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;A&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;float&quot;,&#10;                    &quot;name&quot;: &quot;float&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{5ccf17aa-05c4-403d-8b53-ffc4f3705011}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{cbc3263d-0c3b-4371-a313-89a7511ed31f}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{0b7620bf-c120-4a2a-b01c-8215eceef057}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{5ccf17aa-05c4-403d-8b53-ffc4f3705011}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{0b7620bf-c120-4a2a-b01c-8215eceef057}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{5ccf17aa-05c4-403d-8b53-ffc4f3705011}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{0b7620bf-c120-4a2a-b01c-8215eceef057}&quot;,&#10;            &quot;in_index&quot;: 2,&#10;            &quot;out_id&quot;: &quot;{5ccf17aa-05c4-403d-8b53-ffc4f3705011}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{7215efa9-091e-4944-9456-0e0480007bfc}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{0b7620bf-c120-4a2a-b01c-8215eceef057}&quot;,&#10;            &quot;out_index&quot;: 1&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;B&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;float&quot;,&#10;                    &quot;name&quot;: &quot;float&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{fa826a69-eaa8-4e12-85a2-8a5281202843}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{e7e3639e-b84a-4334-a90a-72c87a0a8965}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;A&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;vec2&quot;,&#10;                    &quot;name&quot;: &quot;vec2&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{fa826a69-eaa8-4e12-85a2-8a5281202843}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{5bcbd76a-e869-497b-94d4-963ff2ffb972}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;A&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;vec2&quot;,&#10;                    &quot;name&quot;: &quot;vec2&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{a142a62a-f478-4897-86de-25bd0bacc68b}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{fa826a69-eaa8-4e12-85a2-8a5281202843}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        }&#10;    ],&#10;    &quot;nodes&quot;: [&#10;        {&#10;            &quot;id&quot;: &quot;{7215efa9-091e-4944-9456-0e0480007bfc}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;ShaderTemplate&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: 0,&#10;                &quot;y&quot;: 304&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{5bcbd76a-e869-497b-94d4-963ff2ffb972}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;VertexAttribute&quot;,&#10;                &quot;option&quot;: &quot;uv0&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -1266,&#10;                &quot;y&quot;: 269&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{a142a62a-f478-4897-86de-25bd0bacc68b}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Floor&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -907,&#10;                &quot;y&quot;: 274&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{9e34dd95-8db8-4d99-88d2-75d5c6b0fd5b}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Split&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -772,&#10;                &quot;y&quot;: 270&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{5ccf17aa-05c4-403d-8b53-ffc4f3705011}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Mod&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -455,&#10;                &quot;y&quot;: 353&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{cbc3263d-0c3b-4371-a313-89a7511ed31f}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Addition&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -589,&#10;                &quot;y&quot;: 271&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{9c1e697d-c800-4a35-9385-9e3ed06a2000}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Export&quot;: &quot;false&quot;,&#10;                &quot;name&quot;: &quot;Float&quot;,&#10;                &quot;number&quot;: &quot;2.0&quot;,&#10;                &quot;variableName&quot;: &quot;Float_35&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -631,&#10;                &quot;y&quot;: 391&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{0b7620bf-c120-4a2a-b01c-8215eceef057}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Combine&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -198,&#10;                &quot;y&quot;: 312&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{e7e3639e-b84a-4334-a90a-72c87a0a8965}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Export&quot;: &quot;false&quot;,&#10;                &quot;name&quot;: &quot;Float&quot;,&#10;                &quot;number&quot;: &quot;10.0&quot;,&#10;                &quot;variableName&quot;: &quot;Float_37&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -1200,&#10;                &quot;y&quot;: 433&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{fa826a69-eaa8-4e12-85a2-8a5281202843}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Multiplication&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -1006,&#10;                &quot;y&quot;: 375&#10;            }&#10;        }&#10;    ]&#10;}&#10;" CullMode="CULL_BACK" BlendMode="Opaque" />
