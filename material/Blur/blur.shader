<?xml version="1.0" encoding="utf-8"?>
<res class="ShaderProgram" path="Res://Blur/blur.shader" Type="glsl" VertexShader="#version 450&#10;&#10;layout(binding = 0, std140) uniform UBO&#10;{&#10;    mat4 u_WorldMatrix;&#10;    mat4 u_ViewProjMatrix;&#10;} vs_ubo;&#10;&#10;layout(location = 0) in vec3 a_Position;&#10;layout(location = 7) out vec2 v_UV;&#10;layout(location = 4) in vec2 a_UV;&#10;&#10;void main()&#10;{&#10;    vec4 worldPosition = vs_ubo.u_WorldMatrix * vec4(a_Position, 1.0);&#10;    vec4 clipPosition = vs_ubo.u_ViewProjMatrix * worldPosition;&#10;    gl_Position = clipPosition;&#10;    v_UV = a_UV;&#10;}&#10;&#10;" FragmentShader="#version 450&#10;&#10;layout(binding = 1) uniform sampler2D Albedo;&#10;&#10;layout(location = 7) in vec2 v_UV;&#10;layout(location = 0) out vec4 o_FragColor;&#10;&#10;vec3 SRgbToLinear(vec3 srgbIn)&#10;{&#10;    return pow(srgbIn, vec3(2.2000000476837158203125));&#10;}&#10;&#10;vec3 RadialBlur(sampler2D tex, vec2 uv, vec2 center, float quality)&#10;{&#10;    vec2 dir = (center - uv) / vec2(quality);&#10;    vec4 color = vec4(0.0);&#10;    float count = 0.0;&#10;    for (float i = 0.0; i &lt;= quality; i += 1.0)&#10;    {&#10;        color += texture(tex, uv + (dir * i));&#10;        count += 1.0;&#10;    }&#10;    color /= vec4(count);&#10;    return color.xyz;&#10;}&#10;&#10;vec3 GaussianBlur(sampler2D tex, vec2 uv, float dirs)&#10;{&#10;    float directions = dirs;&#10;    float quality = 3.0;&#10;    float radius = 0.015625;&#10;    vec4 color = texture(tex, uv);&#10;    for (float pi = 6.283185482025146484375, d = 0.0; d &lt; pi; d += (pi / directions))&#10;    {&#10;        for (float i = 1.0 / quality; i &lt;= 1.0; i += (1.0 / quality))&#10;        {&#10;            color += texture(tex, uv + ((vec2(cos(d), sin(d)) * radius) * i));&#10;        }&#10;    }&#10;    color /= vec4(((quality * directions) - directions) + 1.0);&#10;    return color.xyz;&#10;}&#10;&#10;vec3 LinearToSRgb(vec3 linearIn)&#10;{&#10;    return pow(linearIn, vec3(0.4545454680919647216796875));&#10;}&#10;&#10;void main()&#10;{&#10;    vec2 Vector2_35_Value = vec2(0.100000001490116119384765625, 0.5);&#10;    vec4 Albedo_Color = texture(Albedo, v_UV);&#10;    vec3 param = Albedo_Color.xyz;&#10;    vec3 _174 = SRgbToLinear(param);&#10;    Albedo_Color = vec4(_174.x, _174.y, _174.z, Albedo_Color.w);&#10;    float Float_36_Value = 16.0;&#10;    float Float_34_Value = 16.0;&#10;    vec2 param_1 = v_UV;&#10;    vec2 param_2 = Vector2_35_Value;&#10;    float param_3 = Float_36_Value;&#10;    vec3 RadialBlur_112 = RadialBlur(Albedo, param_1, param_2, param_3);&#10;    vec2 param_4 = v_UV;&#10;    float param_5 = Float_34_Value;&#10;    vec3 GLSL_110 = GaussianBlur(Albedo, param_4, param_5);&#10;    vec3 _BaseColor = RadialBlur_112;&#10;    float _Opacity = 1.0;&#10;    float _Metalic = 0.20000000298023223876953125;&#10;    float _PerceptualRoughness = 0.5;&#10;    vec3 param_6 = _BaseColor;&#10;    o_FragColor = vec4(LinearToSRgb(param_6), _Opacity);&#10;}&#10;&#10;" Graph="{&#10;    &quot;connections&quot;: [&#10;        {&#10;            &quot;in_id&quot;: &quot;{f2910145-eddb-4dfc-86f9-5f77bf2d7865}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{831c51b6-ccae-4af6-b402-f4b6fd8397e5}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{2bfcf37e-0e3c-4455-9026-9f704aba8e26}&quot;,&#10;            &quot;in_index&quot;: 2,&#10;            &quot;out_id&quot;: &quot;{b3811dd9-b095-401e-b5ad-4c30d6234dcf}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{f2910145-eddb-4dfc-86f9-5f77bf2d7865}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{8b0caea3-a688-465f-9841-ce8cc3f32bd7}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{f2910145-eddb-4dfc-86f9-5f77bf2d7865}&quot;,&#10;            &quot;in_index&quot;: 2,&#10;            &quot;out_id&quot;: &quot;{3728a832-43cb-4011-b15b-eeb0ed8455ae}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{2bfcf37e-0e3c-4455-9026-9f704aba8e26}&quot;,&#10;            &quot;in_index&quot;: 3,&#10;            &quot;out_id&quot;: &quot;{dd0b17aa-4516-4113-b75d-8af58a042706}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{2bfcf37e-0e3c-4455-9026-9f704aba8e26}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{8b0caea3-a688-465f-9841-ce8cc3f32bd7}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{2bfcf37e-0e3c-4455-9026-9f704aba8e26}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{831c51b6-ccae-4af6-b402-f4b6fd8397e5}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{b7f7e787-366b-4d5a-b8f5-2168aa67d467}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{2bfcf37e-0e3c-4455-9026-9f704aba8e26}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        }&#10;    ],&#10;    &quot;nodes&quot;: [&#10;        {&#10;            &quot;id&quot;: &quot;{b3811dd9-b095-401e-b5ad-4c30d6234dcf}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Vector2&quot;,&#10;                &quot;number&quot;: &quot;0.1 0.5&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -488,&#10;                &quot;y&quot;: 648&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{b7f7e787-366b-4d5a-b8f5-2168aa67d467}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;ShaderTemplate&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: 32,&#10;                &quot;y&quot;: 331&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{831c51b6-ccae-4af6-b402-f4b6fd8397e5}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Export&quot;: &quot;true&quot;,&#10;                &quot;isAtla&quot;: &quot;false&quot;,&#10;                &quot;name&quot;: &quot;Texture&quot;,&#10;                &quot;texture&quot;: &quot;Res://Blur/albedo.png&quot;,&#10;                &quot;type&quot;: &quot;General&quot;,&#10;                &quot;variableName&quot;: &quot;Albedo&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -466,&#10;                &quot;y&quot;: 235&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{2bfcf37e-0e3c-4455-9026-9f704aba8e26}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Code&quot;: &quot;vec3 RadialBlur(sampler2D tex, vec2 uv,vec2 center, float quality)\n{\n\tvec2 dir = (center - uv) / quality;\n\tvec4 color = vec4( 0.0);\n\n\tfloat count = 0.0;\n\tfor (float i = 0.0; i &lt;= quality; i += 1.0)\n\t{\n\t\tcolor += texture(tex, uv + dir * i);\n\t\tcount += 1.0;\n\t}\n\n\tcolor /= count;\n\n\treturn color.xyz;\n}&quot;,&#10;                &quot;FunctionName&quot;: &quot;RadialBlur&quot;,&#10;                &quot;Parameters&quot;: &quot;sampler2D tex, vec2 uv,vec2 center, float quality&quot;,&#10;                &quot;ReturnType&quot;: &quot;vec3&quot;,&#10;                &quot;name&quot;: &quot;RadialBlur&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -230,&#10;                &quot;y&quot;: 414&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{f2910145-eddb-4dfc-86f9-5f77bf2d7865}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Code&quot;: &quot;vec3 GaussianBlur(sampler2D tex,vec2 uv,float dirs)\n{\n\t// https://www.shadertoy.com/view/Xltfzj\n\tfloat pi = 6.28318530718;\n\tfloat directions = dirs;\t// blur directions (default 16.0 - more is better but slower)\n\tfloat quality = 3.0;\t\t// blur quality (default 4.0 - more is better but slower)\n\tfloat radius = 8.0 / 512.0;\t// blur radius\n\t\n\tvec4 color = texture(tex, uv);\n\t\n\tfor(float d=0.0; d&lt;pi; d+=pi/directions)\n\t{\n\t\tfor(float i=1.0/quality; i&lt;=1.0; i+=1.0/quality)\n\t\t{\n\t\t\tcolor += texture(tex, uv+vec2(cos(d), sin(d)) * radius * i);\n\t\t}\n\t}\n\t\n\tcolor /= quality * directions - directions + 1.0;\n\t\n\treturn color.xyz;\n}&quot;,&#10;                &quot;FunctionName&quot;: &quot;GaussianBlur&quot;,&#10;                &quot;Parameters&quot;: &quot;sampler2D tex,vec2 uv,float dirs&quot;,&#10;                &quot;ReturnType&quot;: &quot;vec3&quot;,&#10;                &quot;name&quot;: &quot;GLSL&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -215,&#10;                &quot;y&quot;: 259&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{8b0caea3-a688-465f-9841-ce8cc3f32bd7}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;VertexAttribute&quot;,&#10;                &quot;option&quot;: &quot;uv0&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -523,&#10;                &quot;y&quot;: 380&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{dd0b17aa-4516-4113-b75d-8af58a042706}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Export&quot;: &quot;false&quot;,&#10;                &quot;name&quot;: &quot;Float&quot;,&#10;                &quot;number&quot;: &quot;16.0&quot;,&#10;                &quot;variableName&quot;: &quot;Float_36&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -439,&#10;                &quot;y&quot;: 723&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{3728a832-43cb-4011-b15b-eeb0ed8455ae}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Export&quot;: &quot;false&quot;,&#10;                &quot;name&quot;: &quot;Float&quot;,&#10;                &quot;number&quot;: &quot;16.0&quot;,&#10;                &quot;variableName&quot;: &quot;Float_34&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -440,&#10;                &quot;y&quot;: 460&#10;            }&#10;        }&#10;    ]&#10;}&#10;" CullMode="CULL_BACK" BlendMode="Opaque" Uniforms.Albedo="Res://Blur/albedo.png" />
