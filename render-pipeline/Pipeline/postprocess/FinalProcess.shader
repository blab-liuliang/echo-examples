<?xml version="1.0" encoding="utf-8"?>
<res class="ShaderProgram" path="Res://pipeline/postprocess/FinalProcess.shader" Type="glsl" VertexShader="#version 450&#10;&#10;layout(binding = 0, std140) uniform UBO&#10;{&#10;    mat4 u_WorldMatrix;&#10;    mat4 u_ViewProjMatrix;&#10;} vs_ubo;&#10;&#10;layout(location = 0) in vec3 a_Position;&#10;layout(location = 7) out vec2 v_UV;&#10;layout(location = 4) in vec2 a_UV;&#10;&#10;void main()&#10;{&#10;    vec4 worldPosition = vs_ubo.u_WorldMatrix * vec4(a_Position, 1.0);&#10;    vec4 clipPosition = vs_ubo.u_ViewProjMatrix * worldPosition;&#10;    gl_Position = clipPosition;&#10;    v_UV = a_UV;&#10;}&#10;&#10;" FragmentShader="#version 450&#10;&#10;layout(binding = 1) uniform sampler2D Albedo;&#10;layout(binding = 2) uniform sampler2D BloomBright;&#10;&#10;layout(location = 7) in vec2 v_UV;&#10;layout(location = 0) out vec4 o_FragColor;&#10;&#10;vec3 SRgbToLinear(vec3 srgbIn)&#10;{&#10;    return srgbIn;&#10;}&#10;&#10;vec3 GaussianBlur(sampler2D tex, vec2 uv, float radius, float dirs, float samples, float strength)&#10;{&#10;    float _step = (1.0 / samples) * radius;&#10;    vec4 origin = texture(tex, uv);&#10;    vec4 color = origin;&#10;    float count = 1.0;&#10;    for (float pi = 6.283185482025146484375, directions = dirs, d = 0.0; d &lt; pi; d += (pi / directions))&#10;    {&#10;        for (float i = 1.0; i &lt;= samples; i += 1.0)&#10;        {&#10;            color += texture(tex, uv + ((vec2(cos(d), sin(d)) * _step) * i));&#10;            count += 1.0;&#10;        }&#10;    }&#10;    color /= vec4(count);&#10;    return mix(origin.xyz, color.xyz, vec3(strength));&#10;}&#10;&#10;vec3 LinearToSRgb(vec3 linearIn)&#10;{&#10;    return linearIn;&#10;}&#10;&#10;void main()&#10;{&#10;    vec4 Albedo_Color = texture(Albedo, v_UV);&#10;    vec3 param = Albedo_Color.xyz;&#10;    vec3 _123 = SRgbToLinear(param);&#10;    Albedo_Color = vec4(_123.x, _123.y, _123.z, Albedo_Color.w);&#10;    float Float_32_Value = 1.0;&#10;    float Float_35_Value = 0.009990000165998935699462890625;&#10;    float Float_36_Value = 16.0;&#10;    float Float_37_Value = 8.0;&#10;    vec4 BloomBright_Color = texture(BloomBright, v_UV);&#10;    vec3 param_1 = BloomBright_Color.xyz;&#10;    vec3 _141 = SRgbToLinear(param_1);&#10;    BloomBright_Color = vec4(_141.x, _141.y, _141.z, BloomBright_Color.w);&#10;    vec2 param_2 = v_UV;&#10;    float param_3 = Float_35_Value;&#10;    float param_4 = Float_36_Value;&#10;    float param_5 = Float_37_Value;&#10;    float param_6 = Float_32_Value;&#10;    vec3 GaussianBlur_153 = GaussianBlur(BloomBright, param_2, param_3, param_4, param_5, param_6);&#10;    vec3 Addition_39 = Albedo_Color.xyz + GaussianBlur_153;&#10;    vec3 _BaseColor = Addition_39;&#10;    float _Opacity = 1.0;&#10;    float _Metalic = 0.20000000298023223876953125;&#10;    float _PerceptualRoughness = 0.5;&#10;    vec3 param_7 = _BaseColor;&#10;    o_FragColor = vec4(LinearToSRgb(param_7), _Opacity);&#10;}&#10;&#10;" Graph="{&#10;    &quot;connections&quot;: [&#10;        {&#10;            &quot;in_id&quot;: &quot;{bb5ce516-b449-4e6f-9eda-f6fee8f008b6}&quot;,&#10;            &quot;in_index&quot;: 2,&#10;            &quot;out_id&quot;: &quot;{4b8c4e09-9d93-410c-93a2-1b5279ccc818}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{bb5ce516-b449-4e6f-9eda-f6fee8f008b6}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{1a31f257-22c1-46fb-8cd9-102fe5768725}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{bb5ce516-b449-4e6f-9eda-f6fee8f008b6}&quot;,&#10;            &quot;in_index&quot;: 3,&#10;            &quot;out_id&quot;: &quot;{bd943406-9c6b-430c-9339-de8328a9d83e}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{bb5ce516-b449-4e6f-9eda-f6fee8f008b6}&quot;,&#10;            &quot;in_index&quot;: 4,&#10;            &quot;out_id&quot;: &quot;{f800ca23-1776-4e6e-8baf-88550122294b}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;B&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;vec3&quot;,&#10;                    &quot;name&quot;: &quot;vec3&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{84c5b1fa-b5ee-474b-9b79-37ba2bf5a375}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{bb5ce516-b449-4e6f-9eda-f6fee8f008b6}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{bb5ce516-b449-4e6f-9eda-f6fee8f008b6}&quot;,&#10;            &quot;in_index&quot;: 5,&#10;            &quot;out_id&quot;: &quot;{49470f46-0393-4402-b6c1-a696d920cfa1}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{bb5ce516-b449-4e6f-9eda-f6fee8f008b6}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{1f061e0d-26b9-4f2e-bfde-cba44378657c}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;A&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;vec3&quot;,&#10;                    &quot;name&quot;: &quot;rgb&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{84c5b1fa-b5ee-474b-9b79-37ba2bf5a375}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{a11ff1c6-f5f1-42aa-8492-c7c50ea7fef8}&quot;,&#10;            &quot;out_index&quot;: 1&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{5c2c52da-edae-4345-83a7-466fe2e8ed12}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{84c5b1fa-b5ee-474b-9b79-37ba2bf5a375}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        }&#10;    ],&#10;    &quot;nodes&quot;: [&#10;        {&#10;            &quot;id&quot;: &quot;{5c2c52da-edae-4345-83a7-466fe2e8ed12}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;ShaderTemplate&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: 171,&#10;                &quot;y&quot;: 95&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{a11ff1c6-f5f1-42aa-8492-c7c50ea7fef8}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Export&quot;: &quot;true&quot;,&#10;                &quot;isAtla&quot;: &quot;false&quot;,&#10;                &quot;name&quot;: &quot;Texture&quot;,&#10;                &quot;texture&quot;: &quot;Res://icon.png&quot;,&#10;                &quot;type&quot;: &quot;General&quot;,&#10;                &quot;variableName&quot;: &quot;Albedo&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -319,&#10;                &quot;y&quot;: 64&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{49470f46-0393-4402-b6c1-a696d920cfa1}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Export&quot;: &quot;false&quot;,&#10;                &quot;name&quot;: &quot;Float&quot;,&#10;                &quot;number&quot;: &quot;1.0&quot;,&#10;                &quot;variableName&quot;: &quot;Float_32&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -571,&#10;                &quot;y&quot;: 542&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{bb5ce516-b449-4e6f-9eda-f6fee8f008b6}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Code&quot;: &quot;vec3 GaussianBlur(sampler2D tex,vec2 uv, float radius, float dirs, float samples, float strength)\n{\n\t// https://www.shadertoy.com/view/Xltfzj\n\tfloat pi = 6.28318530718;\n\tfloat directions = dirs;\t// blur directions (default 16.0 - more is better but slower)\n\tfloat step = 1.0 / samples * radius;\n\tvec4 origin = texture(tex, uv);\n\tvec4 color = origin;\n\tfloat count = 1.0;\n\t\n\tfor (float d = 0.0; d &lt; pi; d += pi / directions)\n\t{\n\t\tfor (float i = 1.0; i &lt;= samples; i += 1.0)\n\t\t{\n\t\t\tcolor += texture(tex, uv + vec2(cos(d), sin(d)) * step * i);\n\t\t\tcount += 1.0;\n\t\t}\n\t}\n\n\tcolor /= count;\n\n\treturn mix(origin.xyz, color.xyz, strength);\n}&quot;,&#10;                &quot;FunctionName&quot;: &quot;GaussianBlur&quot;,&#10;                &quot;Parameters&quot;: &quot;sampler2D tex,vec2 uv, float radius, float dirs, float samples, float strength&quot;,&#10;                &quot;ReturnType&quot;: &quot;vec3&quot;,&#10;                &quot;name&quot;: &quot;GaussianBlur&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -287,&#10;                &quot;y&quot;: 229&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{1a31f257-22c1-46fb-8cd9-102fe5768725}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;VertexAttribute&quot;,&#10;                &quot;option&quot;: &quot;uv0&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -644,&#10;                &quot;y&quot;: 260&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{4b8c4e09-9d93-410c-93a2-1b5279ccc818}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Export&quot;: &quot;false&quot;,&#10;                &quot;name&quot;: &quot;Float&quot;,&#10;                &quot;number&quot;: &quot;0.00999&quot;,&#10;                &quot;variableName&quot;: &quot;Float_35&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -565,&#10;                &quot;y&quot;: 344&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{bd943406-9c6b-430c-9339-de8328a9d83e}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Export&quot;: &quot;false&quot;,&#10;                &quot;name&quot;: &quot;Float&quot;,&#10;                &quot;number&quot;: &quot;16.0&quot;,&#10;                &quot;variableName&quot;: &quot;Float_36&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -562,&#10;                &quot;y&quot;: 412&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{f800ca23-1776-4e6e-8baf-88550122294b}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Export&quot;: &quot;false&quot;,&#10;                &quot;name&quot;: &quot;Float&quot;,&#10;                &quot;number&quot;: &quot;8.0&quot;,&#10;                &quot;variableName&quot;: &quot;Float_37&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -571,&#10;                &quot;y&quot;: 477&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{1f061e0d-26b9-4f2e-bfde-cba44378657c}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Export&quot;: &quot;true&quot;,&#10;                &quot;isAtla&quot;: &quot;false&quot;,&#10;                &quot;name&quot;: &quot;Texture&quot;,&#10;                &quot;texture&quot;: &quot;Res://icon.png&quot;,&#10;                &quot;type&quot;: &quot;General&quot;,&#10;                &quot;variableName&quot;: &quot;BloomBright&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -587,&#10;                &quot;y&quot;: 118&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{84c5b1fa-b5ee-474b-9b79-37ba2bf5a375}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Addition&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -27,&#10;                &quot;y&quot;: 96&#10;            }&#10;        }&#10;    ]&#10;}&#10;" CullMode="CULL_BACK" BlendMode="Opaque" Uniforms.Albedo="Res://icon.png" Uniforms.BloomBright="Res://icon.png" />
